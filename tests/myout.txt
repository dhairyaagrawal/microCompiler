;LABEL   FUNC_factorial
;LINK   2
;STOREI 1  ~r0
;EQI $2 ~r0 ELSE_1
;RETURN 1 ~r1 7
;END_RETURN   
;JUMP   END_IF_ELSE2
;LABEL   ELSE_1
;SUBI $2 1 ~r2
;PUSH   
;PUSHREGS   
;PUSHREG   ~r2
;FUNC   FUNC_factorial
;POP   
;POPREGS   
;RTV ~r3 $-2 
;MULI $-2 $2 ~r4
;STOREI ~r4  ~r5
;STOREI ~r5  $-1
;LABEL   END_IF_ELSE2
;RETURN $-1 ~r6 7
;END_RETURN   
;END_RETURN   
;LABEL   FUNC_main
;LINK   2
;WRITES input  
;READI   $-1
;STOREI 1  ~r7
;EQI $-1 ~r7 ELSE_3
;STOREI 1  ~r8
;STOREI ~r8  $-2
;JUMP   END_IF_ELSE4
;LABEL   ELSE_3
;STOREI 1  ~r9
;GTI $-1 ~r9 ELSE_5
;PUSH   
;PUSHREGS   
;PUSHREG   $-1
;FUNC   FUNC_factorial
;POP   
;POPREGS   
;RTV ~r10 $-2 
;JUMP   END_IF_ELSE6
;LABEL   ELSE_5
;STOREI 0  ~r11
;STOREI ~r11  $-2
;LABEL   END_IF_ELSE6
;LABEL   END_IF_ELSE4
;WRITEI $-2  
;WRITES eol  
;END_RETURN   
;END_RETURN   
str input "Please enter an integer number: "
str eol "\n"
push
push r0
push r1
push r2
push r3
jsr FUNC_main
sys halt
label FUNC_factorial
link 2
move 1 ~r0
cmpi $2 ~r0
jne ELSE_1
move 1 ~r1
move ~r1 $7
unlnk
ret
jmp END_IF_ELSE2
label ELSE_1
move $2 ~r2
subi 1 ~r2
push
push r0
push r1
push r2
push r3
push ~r2
jsr FUNC_factorial
pop
pop r3
pop r2
pop r1
pop r0
pop ~r3
move ~r3 $-2
move $-2 ~r4
muli $2 ~r4
move ~r4 ~r5
move ~r5 $-1
label END_IF_ELSE2
move $-1 ~r6
move ~r6 $7
unlnk
ret
unlnk
ret
label FUNC_main
link 2
sys writes input
sys readi $-1
move 1 ~r7
cmpi $-1 ~r7
jne ELSE_3
move 1 ~r8
move ~r8 $-2
jmp END_IF_ELSE4
label ELSE_3
move 1 ~r9
cmpi $-1 ~r9
jle ELSE_5
push
push r0
push r1
push r2
push r3
push $-1
jsr FUNC_factorial
pop
pop r3
pop r2
pop r1
pop r0
pop ~r10
move ~r10 $-2
jmp END_IF_ELSE6
label ELSE_5
move 0 ~r11
move ~r11 $-2
label END_IF_ELSE6
label END_IF_ELSE4
sys writei $-2
sys writes eol
unlnk
ret
unlnk
ret
