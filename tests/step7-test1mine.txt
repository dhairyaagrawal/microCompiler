;LABEL   FUNC_factorial
;LINK   2
;STOREI 1  r0
;EQI $2 r0 ELSE_1
;RETURN 1 r0 7
;END_RETURN   
;JUMP   END_IF_ELSE2
;LABEL   ELSE_1
;SUBI $2 1 r0
;PUSH   
;PUSHREGS   
;PUSHREG   r0
;FUNC   FUNC_factorial
;POP   
;POPREGS   
;RTV r0 $-2 
;MULI $-2 $2 r1
;STOREI r1  r2
;STOREI r2  $-1
;LABEL   END_IF_ELSE2
;RETURN $-1 r1 7
;END_RETURN   
;END_RETURN   
;LABEL   FUNC_main
;LINK   2
;WRITES input  
;READI   $-1
;STOREI 1  r1
;EQI $-1 r1 ELSE_3
;STOREI 1  r1
;STOREI r1  $-2
;JUMP   END_IF_ELSE4
;LABEL   ELSE_3
;STOREI 1  r1
;GTI $-1 r1 ELSE_5
;PUSH   
;PUSHREGS   
;PUSHREG   $-1
;FUNC   FUNC_factorial
;POP   
;POPREGS   
;RTV r0 $-2 
;JUMP   END_IF_ELSE6
;LABEL   ELSE_5
;STOREI 0  r1
;STOREI r1  $-2
;LABEL   END_IF_ELSE6
;LABEL   END_IF_ELSE4
;WRITEI $-2  
;WRITES eol  
;END_RETURN   
;END_RETURN   
str input "Please enter an integer number: "
str eol "\n"
push
push r0
push r1
push r2
push r3
jsr FUNC_main
sys halt
label FUNC_factorial
link 2
move 1 r0
cmpi $2 r0
jne ELSE_1
move 1 r0
move r0 $7
unlnk
ret
jmp END_IF_ELSE2
label ELSE_1
move $2 r0
subi 1 r0
push
push r0
push r1
push r2
push r3
push r0
jsr FUNC_factorial
pop
pop r3
pop r2
pop r1
pop r0
pop r0
move r0 $-2
move $-2 r1
muli $2 r1
move r1 r2
move r2 $-1
label END_IF_ELSE2
move $-1 r1
move r1 $7
unlnk
ret
unlnk
ret
label FUNC_main
link 2
sys writes input
sys readi $-1
move 1 r1
cmpi $-1 r1
jne ELSE_3
move 1 r1
move r1 $-2
jmp END_IF_ELSE4
label ELSE_3
move 1 r1
cmpi $-1 r1
jle ELSE_5
push
push r0
push r1
push r2
push r3
push $-1
jsr FUNC_factorial
pop
pop r3
pop r2
pop r1
pop r0
pop r0
move r0 $-2
jmp END_IF_ELSE6
label ELSE_5
move 0 r1
move r1 $-2
label END_IF_ELSE6
label END_IF_ELSE4
sys writei $-2
sys writes eol
unlnk
ret
unlnk
ret
